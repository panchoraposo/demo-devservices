schemaVersion: 2.2.0
metadata:
  name: dotnet8-testcontainers
  version: 1.0.0
components:
  - name: tools
    container:
      #image: mcr.microsoft.com/dotnet/sdk:9.0
      image: registry.redhat.io/devspaces/udi-rhel9
      memoryLimit: 3Gi
      mountSources: true
      sourceMapping: /projects
      command: ["sleep"]
      args: ["infinity"]

      env:
        - name: DOTNET_CLI_HOME
          value: "/projects/.dotnet"
        - name: DOTNET_CLI_TELEMETRY_OPTOUT
          value: "1"
        - name: DOTNET_USE_POLLING_FILE_WATCHER
          value: "1"
        - name: DOTNET_ROOT
          value: /usr/share/dotnet
        - name: ASPNETCORE_URLS
          value: http://0.0.0.0:5099
        - name: ASPNETCORE_ENVIRONMENT
          value: DevSpaces
        - name: DB_HOST
          value: postgres
        - name: DB_PORT
          value: "5432"
        - name: DB_NAME
          value: moviesdb
        - name: DB_USER
          value: devuser
        - name: DB_PASSWORD
          value: devpass
      endpoints:
        - name: http
          targetPort: 5099
          exposure: public
          protocol: http
      volumeMounts:
        - name: docker-sock
          path: /var/run/docker.sock

  - name: docker-sock
    volume:
      ephemeral: false

commands:
  - id: deploy-db
    exec:
      component: tools
      commandLine: |
        echo "Deploying PostgreSQL DB to OpenShift..."
        oc apply -f /projects/devservices-dotnet8/my-dotnet-app/openshift/postgres.yaml
        echo "Waiting for PostgreSQL pod to be ready..."
        oc wait --for=condition=Ready pod -l app=postgres --timeout=60s
      workingDir: /projects/devservices-dotnet8/my-dotnet-app/openshift/
      group:
        kind: deploy
        isDefault: true
  
  - id: build
    exec:
      component: tools
      commandLine: |
        mkdir -p /projects/.dotnet && dotnet build
      workingDir: /projects/devservices-dotnet8/my-dotnet-app
      group:
        kind: build
        isDefault: true

  - id: run
    exec:
      component: tools
      commandLine: dotnet run --launch-profile DevSpaces
      workingDir: /projects/devservices-dotnet8/my-dotnet-app
      group:
        kind: run
        isDefault: true